// Generated by CoffeeScript 1.7.1
(function() {
  var crypto, key, log;

  crypto = require("crypto");

  log = require('../utils/log').getLogger('pet-crypto');

  key = "asdhjwheru*asd123-123";

  module.exports = {
    decode: function(str, callback) {
      var dec, decipher, err;
      try {
        decipher = crypto.createDecipher('aes-128-cbc', key);
        dec = decipher.update(str, 'hex', 'utf8');
        dec += decipher.final('utf8');
        return callback(dec);
      } catch (_error) {
        err = _error;
        log.logError("" + err.stack);
        return callback(null);
      }
    },
    encode: function(str, callback) {
      var cipher, crypted, err;
      try {
        cipher = crypto.createCipher('aes-128-cbc', key);
        str = str.toString();
        crypted = cipher.update(str, 'utf8', 'hex');
        crypted += cipher.final('hex');
        return callback(crypted);
      } catch (_error) {
        err = _error;
        log.logError("" + err);
        return callback(null);
      }
    },
    digest_s: function(data) {
      var err, md5_str, _encrymd5;
      try {
        _encrymd5 = crypto.createHash('md5');
        _encrymd5.update(data);
        md5_str = _encrymd5.digest('hex');
        return md5_str;
      } catch (_error) {
        err = _error;
        log.logError("" + err.stack);
        return callback(null);
      }
    }
  };

}).call(this);
