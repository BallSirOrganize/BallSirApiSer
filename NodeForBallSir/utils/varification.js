// Generated by CoffeeScript 1.7.1
(function() {
  module.exports = {
    obj: function(json, id) {
      var k, v;
      for (k in json) {
        v = json[k];
        if (k === id) {
          return true;
        }
      }
      return false;
    },
    val: function(json, id) {
      var k, v;
      for (k in json) {
        v = json[k];
        if (k === id) {
          return v;
        }
      }
      return null;
    },
    trim: function(str) {
      return str.replace(/(^\s*)|(\s*$)/g, '');
    },
    ltrim: function(str) {
      return str.replace(/^\s*/g, '');
    },
    rtrim: function(str) {
      return str.replace(/\s*$/, '');
    },
    isEmpty: function(str) {
      if (str !== null && str.length > 0) {
        return true;
      }
      return false;
    },
    equals: function(str1, str2) {
      if (str1 === str2) {
        return true;
      }
      return false;
    },
    equalsIgnoreCase: function(str1, str2) {
      if (str1.toUpperCase() === str2.toUpperCase()) {
        return true;
      }
      return false;
    },
    isChinese: function(str) {
      str = str.replace(/(^\s*)|(\s*$)/g, '');
      if (!(/^[\一-\﨩]*$/.test(str) && (!/^[\-\]*$/.test(str)))) {
        return false;
      }
      return true;
    },
    isEmail: function(str) {
      if (/^[\w-]+(\.[\w-]+)*@[\w-]+(\.[\w-]+)+$/.test(str)) {
        return true;
      }
      return false;
    },
    isImg: function(str) {
      var objReg;
      objReg = new RegExp("[.]+(jpg|jpeg|swf|gif)$", "gi");
      if (objReg.test(str)) {
        return true;
      }
      return false;
    },
    isInteger: function(str) {
      if (/^-?\d+$/.test(str)) {
        return true;
      }
      return false;
    },
    isFloat: function(str) {
      if (/^(-?\d+)(\.\d+)?$/.test(str)) {
        return true;
      }
      return false;
    },
    isPost: function(str) {
      if (/^\d{1,6}$/.test(str)) {
        return true;
      }
      return false;
    },
    isMobile: function(str) {
      if (/^1[35]\d{9}/.test(str)) {
        return true;
      }
      return false;
    },
    isPhone: function(str) {
      if (/^(0[1-9]\d{1,2}-)\d{7,8}(-\d{1,8})?/.test(str)) {
        return true;
      }
      return false;
    },
    isQQ: function(str) {
      if (/^\d{5,9}$/.test(str)) {
        return true;
      }
      return false;
    },
    isIP: function(str) {
      var reg;
      reg = /^(25[0-5]|2[0-4][0-9]|[0-1]{1}[0-9]{2}|[1-9]{1}[0-9]{1}|[1-9])\.(25[0-5]|2[0-4][0-9]|[0-1]{1}[0-9]{2}|[1-9]{1}[0-9]{1}|[1-9]|0)\.(25[0-5]|2[0-4][0-9]|[0-1]{1}[0-9]{2}|[1-9]{1}[0-9]{1}|[1-9]|0)\.(25[0-5]|2[0-4][0-9]|[0-1]{1}[0-9]{2}|[1-9]{1}[0-9]{1}|[0-9])$/;
      if (reg.test(str)) {
        return true;
      }
      return false;
    },
    isDate: function(str) {
      var reg;
      reg = /^((((1[6-9]|[2-9]\d)\d{2})-(0?[13578]|1[02])-(0?[1-9]|[12]\d|3[01]))|(((1[6-9]|[2-9]\d)\d{2})-(0?[13456789]|1[012])-(0?[1-9]|[12]\d|30))|(((1[6-9]|[2-9]\d)\d{2})-0?2-(0?[1-9]|1\d|2[0-8]))|(((1[6-9]|[2-9]\d)(0[48]|[2468][048]|[13579][26])|((16|[2468][048]|[3579][26])00))-0?2-29-))$/;
      if (reg.test(str)) {
        return true;
      }
      return false;
    },
    isIdCardNo: function(idNumber) {
      var date6, date8, factorArr, i, intCheckDigit, lngProduct, varArray, _i, _j, _ref;
      factorArr = new Array(7, 9, 10, 5, 8, 4, 2, 1, 6, 3, 7, 9, 10, 5, 8, 4, 2, 1);
      varArray = new Array();
      lngProduct = 0;
      if (idNumber.length !== 15 && idNumber.length !== 18) {
        return false;
      }
      for (i = _i = 0, _ref = idNumber.length - 1; 0 <= _ref ? _i <= _ref : _i >= _ref; i = 0 <= _ref ? ++_i : --_i) {
        varArray[i] = idNumber.charAt(i);
        if ((varArray[i] < '0' || varArray[i] > '9') && (i !== 17)) {
          return false;
        } else if (i < 17) {
          varArray[i] = varArray[i] * factorArr[i];
        }
      }
      if (idNumber.length === 18) {
        date8 = idNumber.substring(6, 14);
        if (checkDate(date8) === false) {
          return false;
        }
        for (i = _j = 0; _j <= 16; i = ++_j) {
          lngProduct = lngProduct + varArray[i];
        }
        intCheckDigit = 12 - lngProduct % 11;
        switch (intCheckDigit) {
          case 10:
            intCheckDigit = 'X';
            break;
          case 11:
            intCheckDigit = 0;
            break;
          case 12:
            intCheckDigit = 1;
        }
        if (varArray[17].toUpperCase() !== intCheckDigit) {
          return false;
        }
      }
      date6 = idNumber.substring(6, 12);
      if (checkDate(date6) === false) {
        return false;
      }
      return true;
    }
  };

}).call(this);
